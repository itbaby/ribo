name: Ribo CI/CD

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Get version from package.json
        id: version
        uses: martinbeentjes/npm-get-version-action@v1.3.0
        
      - name: Create and push tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          # Check if tag exists
          if git rev-parse "v${{ steps.version.outputs.current-version }}" >/dev/null 2>&1; then
            echo "Tag v${{ steps.version.outputs.current-version }} already exists. Skipping tag creation."
          else
            git tag -a v${{ steps.version.outputs.current-version }} -m "Release v${{ steps.version.outputs.current-version }}"
            git push origin v${{ steps.version.outputs.current-version }}
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Check if release exists
        id: check_release
        run: |
          RELEASE_EXISTS=$(curl -s -o /dev/null -w "%{http_code}" https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ steps.version.outputs.current-version }})
          if [ "$RELEASE_EXISTS" == "200" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Release for tag v${{ steps.version.outputs.current-version }} already exists. Skipping release creation."
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        id: create_release
        if: steps.check_release.outputs.exists != 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.current-version }}
          release_name: Release v${{ steps.version.outputs.current-version }}
          draft: false
          prerelease: false
          body: |
            ## Release v${{ steps.version.outputs.current-version }}
            
            ### Changes in this release
            - See commit history for details